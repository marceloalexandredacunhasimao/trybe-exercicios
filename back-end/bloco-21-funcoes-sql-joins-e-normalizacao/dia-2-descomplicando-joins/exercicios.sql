/*
ExercÃ­cio 1: Utilizando o INNER JOIN, encontre as vendas nacionais (domestic_sales) e internacionais
(international_sales) de cada filme.
ðŸš€ ExercÃ­cio 2: Utilizando o INNER JOIN, faÃ§a uma busca que retorne o nÃºmero de vendas para cada filme
que possui um nÃºmero maior de vendas internacionais (international_sales) do que vendas nacionais
(domestic_sales).
ðŸš€ ExercÃ­cio 3: Utilizando o INNER JOIN, faÃ§a uma busca que retorne os filmes e sua avaliaÃ§Ã£o (rating)
em ordem decrescente.
ExercÃ­cio 4: Utilizando o LEFT JOIN, faÃ§a uma busca que retorne todos os dados dos cinemas, mesmo os que
nÃ£o possuem filmes em cartaz e, adicionalmente, os dados dos filmes que estÃ£o em cartaz nestes cinemas.
Retorne os nomes dos cinemas em ordem alfabÃ©tica.
ExercÃ­cio 5: Utilizando o RIGHT JOIN, faÃ§a uma busca que retorne todos os dados dos filmes, mesmo os que
nÃ£o estÃ£o em cartaz e, adicionalmente, os dados dos cinemas que possuem estes filmes em cartaz.
Retorne os nomes dos cinemas em ordem alfabÃ©tica.
ðŸš€ ExercÃ­cio 6: Utilizando o INNER JOIN, selecione todas as informaÃ§Ãµes dos filmes que estÃ£o em cartaz
(possuem theater_id diferente de NULL) com avaliaÃ§Ã£o maior que 8.
*/
SELECT * FROM Pixar.Movies;
SELECT * FROM Pixar.Theater;
SELECT * FROM Pixar.BoxOffice;

#1
SELECT m.title, b.domestic_sales, b.international_sales
FROM Pixar.Movies AS m
INNER JOIN Pixar.BoxOffice AS b
ON m.id = b.movie_id;

#2
SELECT m.title, b.domestic_sales, b.international_sales, (b.domestic_sales + b.international_sales) AS total
FROM Pixar.Movies AS m
INNER JOIN Pixar.BoxOffice AS b
ON m.id = b.movie_id
WHERE b.international_sales > b.domestic_sales;

#3
SELECT m.title, b.rating
FROM Pixar.Movies as m
INNER JOIN Pixar.BoxOffice as b
ON m.id = b.movie_id
ORDER BY b.rating DESC;

#4
SELECT t.id AS theater_id, t.name, t.location, m.id, m.title, m.director, m.year, m.length_minutes, m.theater_id
FROM Pixar.Theater AS t
LEFT JOIN Pixar.Movies AS m
ON t.id = m.theater_id
ORDER BY t.name ASC;

#5
SELECT t.id AS th_id, t.name, t.location,
m.id, m.title, m.director, m.year, m.length_minutes, m.theater_id
FROM Pixar.Theater AS t
RIGHT JOIN Pixar.Movies AS m
ON t.id = m.theater_id
ORDER BY t.name ASC;

#6
/*#ðŸš€ ExercÃ­cio 6: Utilizando o INNER JOIN, selecione todas as informaÃ§Ãµes dos filmes que estÃ£o em cartaz
(possuem theater_id diferente de NULL) com avaliaÃ§Ã£o maior que 8.
*/
SELECT m.id, m.title, m.director, m.year, m.length_minutes, m.theater_id, b.rating
FROM Pixar.Movies AS m
INNER JOIN Pixar.Theater AS t
ON t.id = m.theater_id
INNER JOIN Pixar.BoxOffice AS b
ON b.movie_id = m.id
WHERE b.rating > 8;
/*
#Gabarito:
USE Pixar;
SELECT 
    m.id,
    m.title,
    m.director,
    m.year,
    m.length_minutes,
    m.theater_id
FROM
    Movies m
        INNER JOIN
    BoxOffice b ON b.movie_id = m.id
WHERE
    b.rating > 8
        AND m.theater_id IS NOT NULL;
*/
